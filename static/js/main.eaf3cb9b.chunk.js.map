{"version":3,"sources":["components/createMultipleChoicesTest/qanda/Display-information/TestNameAndDate.js","components/createMultipleChoicesTest/qanda/Display-information/NumberOfCorrectAnswers.js","components/createMultipleChoicesTest/qanda/Display-information/DisplayInformation.js","components/button/Button.js","demoTests.js","components/createMultipleChoicesTest/qanda/Dialog/Dialog.js","components/createMultipleChoicesTest/qanda/Result/Result.js","components/createMultipleChoicesTest/qanda/Question/Question.js","components/createMultipleChoicesTest/qanda/Question/Question-container.js","components/createMultipleChoicesTest/qanda/Answer/Answer.js","components/createMultipleChoicesTest/qanda/Answer/Answer-container.js","components/createMultipleChoicesTest/qanda/Test/Test.js","components/createMultipleChoicesTest/qanda/Test-container.js","components/createMultipleChoicesTest/testlist/Test-item/TestItem.js","components/createMultipleChoicesTest/testlist/TestListContainer.js","components/form/Form.js","utils/shuffleArray.js","components/createMultipleChoicesTest/Container.js","utils/alphabetArray.js","components/app/App.js","serviceWorker.js","index.js"],"names":["TestNameAndDate","testDisplay","JSON","parse","localStorage","getItem","this","props","testSelected","className","src","process","alt","testName","date","React","Component","NumberOfCorrectAnswers","passStateTwo","answeredQuestion","filter","x","length","passTestLength","DisplayInformation","passState","testLength","NextButton","onClick","passNextButton","question","RetryButton","passRetryButton","StartButton","startButton","EndButton","passEndButtonTwo","ContinueButton","passContinueButtonTwo","PaginationButton","paginationButton","type","data-goto","page","AddTestButton","addTestButton","demoTests","DisplayStartDialog","name","returnName","style","fontSize","marginBottom","DisplayEndDialog","class","passEndButton","passContinueButton","Result","retryButton","CorrectQuestion","number","parseInt","order","color","WrongQuestion","UnAnsweredQuestion","QuestionContainer","questionContainer","map","index","passQuestionButton","display","aria-label","Answer","answer","HoverableAnswer","passAnswerButtonTwo","CorrectAnswer","WrongAnswer","AnswerContainer","answerContainer","answers","chosen","correct","passAnswerButton","character","Test","qAndA","img","imageDisplay","dialog","continueButton","endButton","justifyContent","alignItems","questionButton","nextButton","gridTemplateColumns","answerButton","TestContainer","onAnswerClicked","bind","onNextButtonClicked","onRetryButtonClicked","onContinueButtonClicked","onEndButtonClicked","onQuestionClicked","state","characterArray","finish","setState","e","questionNumber","currentTarget","querySelector","innerHTML","substring","push","event","isCorrected","includes","startDialog","whatTodisplay","background","width","boxShadow","height","TestItem","testClicked","marginLeft","test","testNumber","TestListContainer","createTestArray","resPerPage","testArray","start","end","slice","forEach","renderButton","numResults","pages","Math","ceil","button","tests","key","marginTop","shuffleArray","array","i","j","floor","random","Container","testLink","testCount","handleChange","onAddTestButtonClicked","onTestClicked","onPaginationButtonClicked","onStartButtonClicked","target","value","checked","json","q","s","a","ans","n","returnArray","alphabetArray","split","char","toUpperCase","o","setItem","stringify","btn","closest","goToPage","dataset","goto","info","link","Date","toLocaleString","unshift","finishContainer","handleJson","json1","json2","json3","json4","TEST","returnTest","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.eaf3cb9b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./TestNameAndDate.css\"\r\nexport class TestNameAndDate extends React.Component {\r\n    render() {\r\n      let testDisplay=JSON.parse(localStorage.getItem(`testNo${this.props.testSelected}`))\r\n      if(testDisplay){\r\n        return (\r\n          <div className=\"test-name-and-date\">\r\n            <img\r\n              className=\"test-img\"\r\n              src={process.env.PUBLIC_URL + `/icon-quiz/book.png`}\r\n              alt=\"book-img\"\r\n            />\r\n            <div>\r\n              <p className=\"test-name\">{testDisplay.testName}</p>\r\n              <p className=\"test-date\">{testDisplay.date}</p>\r\n            </div>\r\n          </div>\r\n        );\r\n      } else return (\r\n        <div className=\"test-name-and-date\">\r\n            <img\r\n              className=\"test-img\"\r\n              src={process.env.PUBLIC_URL + `/icon-quiz/book.png`}\r\n              alt=\"book-img\"\r\n            />\r\n            <div>\r\n              <p className=\"test-name\"></p>\r\n              <p className=\"test-date\"></p>\r\n            </div>\r\n          </div>\r\n      )\r\n      \r\n    }\r\n  }","import React from \"react\";\r\nimport \"./NumberOfCorrectAnswers.css\"\r\nexport class NumberOfCorrectAnswers extends React.Component {\r\n    render() {\r\n      return (\r\n        <div className=\"quiz-correct-answers\">\r\n          <img\r\n            className=\"check-img\"\r\n            src={process.env.PUBLIC_URL + `/icon-quiz/check.png`}\r\n            alt=\"check-img\"\r\n          />\r\n          <p className=\"quiz-correct-answers__display\">\r\n            <span>\r\n              {\r\n                this.props.passStateTwo.answeredQuestion.filter(x => x === 1)\r\n                  .length\r\n              }\r\n            </span>\r\n            /<span>{this.props.passTestLength}</span>\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n  }","import React from \"react\";\r\nimport \"./DisplayInformation.css\"\r\nimport {TestNameAndDate} from \"./TestNameAndDate\"\r\nimport {NumberOfCorrectAnswers} from \"./NumberOfCorrectAnswers\"\r\nexport class DisplayInformation extends React.Component {\r\n    render() {\r\n      return (\r\n        <div className=\"test-info\">\r\n          <TestNameAndDate\r\n            testSelected={this.props.testSelected}\r\n          ></TestNameAndDate>\r\n          <NumberOfCorrectAnswers\r\n            passStateTwo={this.props.passState}\r\n            passTestLength={this.props.testLength}\r\n          ></NumberOfCorrectAnswers>\r\n        </div>\r\n      );\r\n    }\r\n  }","import React from \"react\";\r\nimport \"./Button.css\"\r\nexport class NextButton extends React.Component {\r\n    render() {\r\n      return (\r\n        <div onClick={this.props.passNextButton} className=\"next-button\">\r\n          {this.props.passStateTwo.question + 1 !== this.props.passTestLength\r\n            ? \"Câu tiếp theo\"\r\n            : \"Kết thúc\"}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  export class RetryButton extends React.Component {\r\n    render() {\r\n      return (\r\n        <div onClick={this.props.passRetryButton} className=\"next-button\">\r\n          Làm lại\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  export class StartButton extends React.Component {\r\n    render() {\r\n      return (\r\n        <div onClick={this.props.startButton} className=\"next-button\">\r\n          Bắt đầu\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  export class EndButton extends React.Component {\r\n    render() {\r\n      return (\r\n        <div\r\n          onClick={this.props.passEndButtonTwo}\r\n          className=\"end-continue-button\"\r\n        >\r\n          KẾT THÚC\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  export class ContinueButton extends React.Component {\r\n    render() {\r\n      return (\r\n        <div\r\n          onClick={this.props.passContinueButtonTwo}\r\n          className=\"end-continue-button\"\r\n        >\r\n          TIẾP TỤC\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  export class PaginationButton extends React.Component {\r\n    render(){\r\n      return (\r\n        <button onClick={this.props.paginationButton} className={`page-button results__btn--${this.props.type}`} data-goto={this.props.type === 'prev' ? this.props.page - 1 : this.props.page + 1}>\r\n          <span>{`Page ${this.props.type === 'prev' ? this.props.page - 1 : this.props.page + 1}`}</span>\r\n          <i className=\"material-icons\">{`chevron_${this.props.type === 'prev' ? 'left' : 'right'}`}</i>\r\n        </button>\r\n      )\r\n    }\r\n  }\r\n  export class AddTestButton extends React.Component{\r\n    render() {\r\n      return (\r\n        <div\r\n          className=\"add-test-button\"\r\n          onClick={this.props.addTestButton}\r\n        >\r\n          Thêm\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  "," const demoTests = [\r\n  {\"testNumber\":1,\"link\":\"#\",\"testName\":\"Biểu mô\",\"date\":\"25/12/2019\"},\r\n  {\"testNumber\":2,\"link\":\"#\",\"testName\":\"Mô liên kết\",\"date\":\"25/12/2019\"},\r\n  {\"testNumber\":3,\"link\":\"#\",\"testName\":\"Sụn xương\",\"date\":\"25/12/2019\"},\r\n  {\"testNumber\":4,\"link\":\"#\",\"testName\":\"Mô máu(hiệu chỉnh theo sinh lý)\",\"date\":\"25/12/2019\"}\r\n]\r\nexport default demoTests","import React from \"react\";\r\nimport \"./Dialog.css\"\r\nimport {StartButton,EndButton,ContinueButton} from \"../../../button/Button\"\r\nimport demoTests from \"../../../../demoTests\"\r\nexport class DisplayStartDialog extends React.Component {\r\n  returnName(){\r\n    return demoTests[this.props.testSelected-1].testName\r\n  }  \r\n  render() {\r\n    let name=this.returnName()\r\n      return (\r\n        <div className=\"display-result display-quizzes\">\r\n          <img\r\n            className=\"start-img\"\r\n            src={process.env.PUBLIC_URL + \"/start.jpg\"}\r\n            alt=\"start-img\"\r\n          />\r\n          <p className=\"display-result__yourScore\" style={{fontSize:\"3rem\"}}>{name}</p>\r\n          <p className=\"display-result__yourScore\" style={{marginBottom:\"2rem\"}}>Bài trắc nghiệm này có <span>{this.props.testLength}</span> câu hỏi</p>\r\n          <StartButton\r\n            startButton={this.props.startButton}\r\n          ></StartButton>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  export class DisplayEndDialog extends React.Component {\r\n    render() {\r\n      return (\r\n        <div className=\"display-dialog-container\">\r\n          <div className=\"display-dialog\">\r\n            <p className=\"display-dialog__title\">\r\n              Bạn vẫn còn câu chưa điền. Kết thúc?\r\n            </p>\r\n            <div class=\"end-continue-button-container\">\r\n              <EndButton passEndButtonTwo={this.props.passEndButton}></EndButton>\r\n              <ContinueButton\r\n                passContinueButtonTwo={this.props.passContinueButton}\r\n              ></ContinueButton>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  ","import React from \"react\";\r\nimport {RetryButton} from \"../../../button/Button\"\r\nimport \"../Dialog/Dialog.css\"\r\nexport class Result extends React.Component {\r\n    render() {\r\n      return (\r\n        <div className=\"display-result display-quizzes\">\r\n          <p className=\"display-result__title\">\r\n            Bạn đã hoàn thành bài trắc nghiệm\r\n          </p>\r\n          <img\r\n            className=\"ending-img\"\r\n            src={process.env.PUBLIC_URL + \"/ending.jpg\"}\r\n            alt=\"ending-img\"\r\n          />\r\n          <p className=\"display-result__yourScore\">Điểm của bạn</p>\r\n          <p\r\n            style={{ marginBottom: \"1rem\" }}\r\n            className=\"quiz-correct-answers__display\"\r\n          >\r\n            <span>\r\n              {this.props.passState.answeredQuestion.filter(x => x === 1).length}\r\n            </span>\r\n            /<span>{this.props.testLength}</span>\r\n          </p>\r\n          <RetryButton passRetryButton={this.props.retryButton}></RetryButton>\r\n        </div>\r\n      );\r\n    }\r\n  }","import React from \"react\";\r\nimport \"./Question.css\"\r\n\r\nexport class CorrectQuestion extends React.Component {\r\n    render() {\r\n      const number = parseInt(this.props.order) + 1;\r\n      return (\r\n        <div className=\"question-container\">\r\n          <p\r\n            style={{ color: \"#267131\" }} className=\"question-li\"\r\n          >\r\n            {number} - Đúng\r\n          </p>\r\n          <img\r\n            className=\"check-error-img\"\r\n            src={process.env.PUBLIC_URL + \"/icon-quiz/check.png\"}\r\n            alt=\"check-img\"\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  export class WrongQuestion extends React.Component {\r\n    render() {\r\n      const number = parseInt(this.props.order) + 1;\r\n      return (\r\n        <div className=\"question-container\">\r\n          <p className=\"question-li\" style={{ color: \"red\" }}>\r\n            {number} - Sai\r\n          </p>\r\n          <img\r\n            className=\"check-error-img\"\r\n            src={process.env.PUBLIC_URL + \"/icon-quiz/error.png\"}\r\n            alt=\"error-img\"\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  export class UnAnsweredQuestion extends React.Component {\r\n    render() {\r\n      const number = parseInt(this.props.order) + 1;\r\n      return (\r\n        <p className=\"question-li\">{number} - Chưa trả lời</p>\r\n      );\r\n    }\r\n  }","import React from \"react\";\r\nimport \"./Question.css\"\r\nimport {CorrectQuestion,WrongQuestion,UnAnsweredQuestion} from \"./Question\"\r\nexport class QuestionContainer extends React.Component {\r\n    render() {\r\n      const questionContainer = this.props.passStateTwo.answeredQuestion.map(\r\n        (question, index) => {\r\n          if (question === 1) {\r\n            return (\r\n              <li\r\n                onClick={this.props.passQuestionButton}\r\n                className=\"drop dropdown-item\"\r\n              >\r\n                <CorrectQuestion order={index}></CorrectQuestion>\r\n              </li>\r\n            );\r\n          } else if (question === 0) {\r\n            return (\r\n              <li\r\n                onClick={this.props.passQuestionButton}\r\n                className=\"drop dropdown-item\"\r\n              >\r\n                <WrongQuestion order={index}></WrongQuestion>\r\n              </li>\r\n            );\r\n          }\r\n          return (\r\n            <li\r\n              onClick={this.props.passQuestionButton}\r\n              className=\"drop dropdown-item\"\r\n            >\r\n              <UnAnsweredQuestion order={index}></UnAnsweredQuestion>\r\n            </li>\r\n          );\r\n        }\r\n      );\r\n      return (\r\n        <div className=\"questions-drop-down\">\r\n          <i className=\"material-icons\">pets</i>\r\n          <div className=\"parent-dropdown\">\r\n            <ul>\r\n              <li className=\"drop dropdown-container\">\r\n                <div style={{ display: \"flex\" }}>\r\n                  <p className=\"question-dropdown\">\r\n                    Câu hỏi <span>{this.props.passStateTwo.question + 1}</span>/\r\n                    <span>{this.props.passTestLength}</span>\r\n                  </p>\r\n                  <i className=\"dropdown-icon material-icons\">arrow_drop_down</i>\r\n                </div>\r\n                <div className=\"underline\"></div>\r\n                <ul className=\"dropdown\" aria-label=\"submenu\">\r\n                  {questionContainer}\r\n                </ul>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }","import React from \"react\";\r\nimport \"./Answer.css\"\r\nexport class Answer extends React.Component {\r\n    render() {\r\n      return (\r\n        <div className=\"answer\">\r\n          <div className=\"answer__character\">\r\n            <p>{this.props.answer[0]}</p>\r\n          </div>\r\n          <p className=\"answer__choice\">{this.props.answer[1]}</p>\r\n          <p className=\"answer__result\">{this.props.answer[2]}</p>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  export class HoverableAnswer extends React.Component {\r\n    render() {\r\n      return (\r\n        <div\r\n          onClick={this.props.passAnswerButtonTwo}\r\n          className=\"answer answer-hoverable\"\r\n        >\r\n          <p className=\"answer__character\">{this.props.answer[0]}</p>\r\n          <p className=\"answer__choice\">{this.props.answer[1]}</p>\r\n          <p className=\"answer__result\">{this.props.answer[2]}</p>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  export class CorrectAnswer extends React.Component {\r\n    render() {\r\n      return (\r\n        <div className=\"correct-answer answer\">\r\n          <p className=\"answer__character display-none\">{this.props.answer[0]}</p>\r\n          <div className=\"answer__character\">\r\n            <img\r\n              className=\"check-error-img__character\"\r\n              src={process.env.PUBLIC_URL + `/icon-quiz/check.png`}\r\n              alt=\"check-img\"\r\n            />\r\n          </div>\r\n          <p className=\"answer__choice\">{this.props.answer[1]}</p>\r\n          <p className=\"answer__result\">{this.props.answer[2]}</p>\r\n          <p className=\"answer__result-word\" style={{ color: \"#267131\" }}>\r\n            Câu đúng\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  export class WrongAnswer extends React.Component {\r\n    render() {\r\n      return (\r\n        <div className=\"wrong-answer answer\">\r\n          <p className=\"answer__character display-none\">{this.props.answer[0]}</p>\r\n          <div className=\"answer__character\">\r\n            <img\r\n              className=\"check-error-img__character\"\r\n              src={process.env.PUBLIC_URL + `/icon-quiz/error.png`}\r\n              alt=\"error-img\"\r\n            />\r\n          </div>\r\n          <p className=\"answer__choice\">{this.props.answer[1]}</p>\r\n          <p className=\"answer__result\">{this.props.answer[2]}</p>\r\n          <p className=\"answer__result-word\" style={{ color: \"red\" }}>\r\n            Câu bạn chọn\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n  }","import React from \"react\";\r\nimport \"./Answer.css\"\r\nimport {Answer,HoverableAnswer,CorrectAnswer,WrongAnswer} from \"./Answer\"\r\nexport  class AnswerContainer extends React.Component {\r\n    render() {\r\n      const answerContainer = this.props.answers.map((answer, index) => {\r\n        if (this.props.passStateTwo.chosen && this.props.passStateTwo.correct) {\r\n          if (answer[2] === 1) {\r\n            return (\r\n              <li>\r\n                <CorrectAnswer answer={answer}></CorrectAnswer>\r\n              </li>\r\n            );\r\n          } else {\r\n            return (\r\n              <li>\r\n                <Answer\r\n                  passAnswerButtonTwo={this.props.passAnswerButton}\r\n                  answer={answer}\r\n                ></Answer>\r\n              </li>\r\n            );\r\n          }\r\n        }\r\n        if (this.props.passStateTwo.chosen && !this.props.passStateTwo.correct) {\r\n          if (answer[2] === 1) {\r\n            return (\r\n              <li>\r\n                <CorrectAnswer answer={answer}></CorrectAnswer>\r\n              </li>\r\n            );\r\n          } else if (answer[0] === this.props.passStateTwo.character) {\r\n            return (\r\n              <li>\r\n                <WrongAnswer answer={answer}></WrongAnswer>\r\n              </li>\r\n            );\r\n          } else {\r\n            return (\r\n              <li>\r\n                <Answer\r\n                  passAnswerButtonTwo={this.props.passAnswerButton}\r\n                  answer={answer}\r\n                ></Answer>\r\n              </li>\r\n            );\r\n          }\r\n        }\r\n        return (\r\n          <li>\r\n            <HoverableAnswer\r\n              passAnswerButtonTwo={this.props.passAnswerButton}\r\n              answer={answer}\r\n            ></HoverableAnswer>\r\n          </li>\r\n        );\r\n      });\r\n  \r\n      return <ul className=\"answers\">{answerContainer}</ul>;\r\n    }\r\n  }","import React from \"react\";\r\nimport {QuestionContainer} from \"../Question/Question-container\"\r\nimport {AnswerContainer} from \"../Answer/Answer-container\"\r\nimport {NextButton} from \"../../../button/Button\"\r\nimport {DisplayEndDialog} from \"../Dialog/Dialog\"\r\nexport class Test extends React.Component {\r\n    \r\n  imageDisplay(){\r\n    if(this.props.qAndA.img){\r\n      return (\r\n        <img\r\n          className=\"question-img\"\r\n          src={process.env.PUBLIC_URL + `/img/${this.props.qAndA.img}.jpg`}\r\n          alt=\"question-img\"\r\n        />\r\n      )\r\n    } else return null\r\n  }\r\n  render() {\r\n    const style={\r\n        display:\"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n      }\r\n    \r\n    const imageAnswer={\r\n      display:\"grid\",\r\n      gridTemplateColumns:\"42vw 15vw\"\r\n    }\r\n    const imageDisplay=this.imageDisplay()\r\n      return (\r\n        <div className=\"display-quizzes\">\r\n          {this.props.passState.dialog ? (\r\n            <DisplayEndDialog\r\n              passContinueButton={this.props.continueButton}\r\n              passEndButton={this.props.endButton}\r\n            ></DisplayEndDialog>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n          <div style={style}>\r\n            <QuestionContainer\r\n              passQuestionButton={this.props.questionButton}\r\n              passStateTwo={this.props.passState}\r\n              passTestLength={this.props.testLength}\r\n            ></QuestionContainer>\r\n            <NextButton\r\n              passNextButton={this.props.nextButton}\r\n              passStateTwo={this.props.passState}\r\n              passTestLength={this.props.testLength}\r\n            ></NextButton>\r\n          </div>\r\n          <p className=\"question\">{this.props.qAndA.question}</p>\r\n          <div style={imageAnswer}>\r\n            <AnswerContainer\r\n              passStateTwo={this.props.passState}\r\n              passAnswerButton={this.props.answerButton}\r\n              answers={this.props.qAndA.answers}\r\n            ></AnswerContainer>\r\n            <div className=\"questionImg\">\r\n              {imageDisplay}\r\n              <p>Nhấn giữ hình để phóng lớn</p>\r\n            </div>\r\n          </div>\r\n          \r\n        </div>\r\n      );\r\n    }\r\n  }","import React from \"react\";\r\nimport {DisplayInformation} from \"./Display-information/DisplayInformation\"\r\nimport {DisplayStartDialog} from \"./Dialog/Dialog\"\r\nimport {Result} from \"./Result/Result\"\r\nimport {Test} from \"./Test/Test\"\r\nexport class TestContainer extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.onAnswerClicked = this.onAnswerClicked.bind(this);\r\n      this.onNextButtonClicked = this.onNextButtonClicked.bind(this);\r\n      this.onRetryButtonClicked = this.onRetryButtonClicked.bind(this);\r\n      this.onContinueButtonClicked = this.onContinueButtonClicked.bind(this);\r\n      this.onEndButtonClicked = this.onEndButtonClicked.bind(this);\r\n      this.onQuestionClicked = this.onQuestionClicked.bind(this);\r\n      this.state = {\r\n        chosen: false,\r\n        correct: false,\r\n        character: \"\",\r\n        question: 0,\r\n        answeredQuestion: [],\r\n        characterArray: [],\r\n        finish: false,\r\n        dialog: false\r\n      };\r\n    }\r\n    onRetryButtonClicked() {\r\n      this.setState({\r\n        chosen: false,\r\n        correct: false,\r\n        character: \"\",\r\n        question: 0,\r\n        answeredQuestion: [],\r\n        characterArray: [],\r\n        finish: false,\r\n        dialog: false\r\n      });\r\n    }\r\n    onContinueButtonClicked() {\r\n      this.setState({ dialog: false });\r\n    }\r\n    onEndButtonClicked() {\r\n      this.setState({ finish: true });\r\n    }\r\n    onQuestionClicked(e) {\r\n      const questionNumber = parseInt(\r\n        e.currentTarget.querySelector(\".question-li\").innerHTML.substring(0, 2)\r\n      );\r\n      if (this.state.question === this.state.answeredQuestion.length) {\r\n        this.setState(state => {\r\n          state.answeredQuestion.push(2);\r\n          state.characterArray.push(\"\");\r\n          return {\r\n            answeredQuestion: state.answeredQuestion,\r\n            characterArray: state.characterArray\r\n          };\r\n        });\r\n      }\r\n      this.setState(state => {\r\n        state.question = questionNumber - 1;\r\n        if (state.answeredQuestion[state.question] === 1) {\r\n          return {\r\n            question: state.question,\r\n            chosen: true,\r\n            correct: true,\r\n            character: state.characterArray[state.question]\r\n          };\r\n        } else if (state.answeredQuestion[state.question] === 0) {\r\n          return {\r\n            question: state.question,\r\n            chosen: true,\r\n            correct: false,\r\n            character: state.characterArray[state.question]\r\n          };\r\n        } else {\r\n          return { chosen: false, correct: false };\r\n        }\r\n      });\r\n    }\r\n    onAnswerClicked(e) {\r\n      const event = e.currentTarget;\r\n      let character = event.querySelector(\".answer__character\").innerHTML;\r\n      let isCorrected = event.querySelector(\".answer__result\").innerHTML;\r\n  \r\n      //neu answeredquestion của question này ton tai va =2\r\n      //update answeredquestion\r\n      if (this.state.answeredQuestion[this.state.question] === 2) {\r\n        if (isCorrected == 1) {\r\n          this.setState({ chosen: true, correct: true, character });\r\n          this.setState(state => {\r\n            state.answeredQuestion[state.question] = 1;\r\n            state.characterArray[state.question] = state.character;\r\n            return {\r\n              answeredQuestion: state.answeredQuestion,\r\n              characterArray: state.characterArray\r\n            };\r\n          });\r\n        } else {\r\n          this.setState({ chosen: true, correct: false, character });\r\n          this.setState(state => {\r\n            state.answeredQuestion[state.question] = 0;\r\n            state.characterArray[state.question] = state.character;\r\n            return {\r\n              answeredQuestion: state.answeredQuestion,\r\n              characterArray: state.characterArray\r\n            };\r\n          });\r\n        }\r\n      } else {\r\n        if (isCorrected == 1) {\r\n          this.setState({ chosen: true, correct: true, character });\r\n          this.setState(state => {\r\n            state.answeredQuestion.push(1);\r\n            state.characterArray.push(state.character);\r\n            return {\r\n              answeredQuestion: state.answeredQuestion,\r\n              characterArray: state.characterArray\r\n            };\r\n          });\r\n        } else {\r\n          this.setState({ chosen: true, correct: false, character });\r\n          this.setState(state => {\r\n            state.answeredQuestion.push(0);\r\n            state.characterArray.push(state.character);\r\n            return {\r\n              answeredQuestion: state.answeredQuestion,\r\n              characterArray: state.characterArray\r\n            };\r\n          });\r\n        }\r\n      }\r\n    }\r\n    onNextButtonClicked() {\r\n      if (this.state.question + 1 === this.props.qAndA.length) {\r\n        if (this.state.answeredQuestion.includes(2)) {\r\n          this.setState({ dialog: true });\r\n        } else this.setState({ finish: true });\r\n      } else {\r\n        if (\r\n          !this.state.chosen &&\r\n          this.state.question === this.state.answeredQuestion.length\r\n        ) {\r\n          this.setState(state => {\r\n            state.answeredQuestion.push(2);\r\n            state.characterArray.push(\"\");\r\n            return {\r\n              answeredQuestion: state.answeredQuestion,\r\n              characterArray: state.characterArray\r\n            };\r\n          });\r\n          this.setState(state => {\r\n            return (state.question += 1);\r\n          });\r\n        } else if (\r\n          this.state.question === this.state.answeredQuestion.length - 1 ||\r\n          this.state.answeredQuestion[this.state.question + 1] === 2\r\n        ) {\r\n          this.setState({ chosen: false, correct: false });\r\n          this.setState(state => {\r\n            return (state.question += 1);\r\n          });\r\n        } else {\r\n          this.setState(state => {\r\n            state.question += 1;\r\n            state.character = state.characterArray[state.question];\r\n            if (state.answeredQuestion[state.question] === 1) {\r\n              return {\r\n                correct: true,\r\n                question: state.question,\r\n                character: state.character\r\n              };\r\n            } else {\r\n              return {\r\n                correct: false,\r\n                question: state.question,\r\n                character: state.character\r\n              };\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }\r\n    whatTodisplay(){\r\n      if(!this.state.finish && !this.props.startDialog){\r\n        return (\r\n          <Test\r\n            questionButton={this.onQuestionClicked}\r\n            nextButton={this.onNextButtonClicked}\r\n            answerButton={this.onAnswerClicked}\r\n            passState={this.state}\r\n            qAndA={this.props.qAndA[this.state.question]}\r\n            testLength={this.props.qAndA.length}\r\n            endButton={this.onEndButtonClicked}\r\n            continueButton={this.onContinueButtonClicked}\r\n          ></Test>\r\n        )\r\n      } else if(this.props.startDialog){\r\n        return (\r\n          <DisplayStartDialog\r\n            startButton={this.props.startButton}\r\n            testLength={this.props.qAndA.length}\r\n            testSelected={this.props.testSelected}\r\n          ></DisplayStartDialog>\r\n        )\r\n      }\r\n      return (\r\n        <Result\r\n          retryButton={this.onRetryButtonClicked}\r\n          passState={this.state}\r\n          testLength={this.props.qAndA.length}\r\n        ></Result>\r\n      )\r\n    }\r\n    render() {\r\n    const informationContainerStyle={\r\n        background:\"#fff\",\r\n        width:\"100%\",\r\n        boxShadow: \"0px 2px 4px #BEBEBE\"}\r\n    const testContainerStyle={\r\n        width:\"100%\",\r\n        height:\"85vh\",\r\n        display:\"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    }\r\n    const display=this.whatTodisplay()\r\n        return (\r\n          <div style={informationContainerStyle}>\r\n            <DisplayInformation\r\n              passState={this.state}\r\n              testLength={this.props.qAndA.length}\r\n              testSelected={this.props.testSelected}\r\n            ></DisplayInformation>\r\n            <div style={testContainerStyle}>\r\n             {display}\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n  }","import React from \"react\";\r\nimport \"./TestItem.css\"\r\nexport class TestItem extends React.Component{\r\n    render() {\r\n      return (\r\n        <div className={`display-test-list ${this.props.testSelected? \"test-selected\":\"\"}`} onClick={this.props.testClicked}>\r\n          <i className=\"material-icons\">library_books</i>\r\n          <div className=\"test-name-date\">\r\n            <p style={{ marginLeft: \"1rem\", fontSize:\".8rem\"}} className=\"test-name\">{this.props.test.testName}</p>\r\n            <p style={{ marginLeft: \"1rem\" }} className=\"test-date\">{this.props.test.date}</p>\r\n            <p className=\"test-number\" style={{display:\"none\"}}>{this.props.test.testNumber}</p>\r\n          </div>\r\n          <i style={{marginLeft:\"3rem\"}} className=\"remove-icon material-icons\" >remove_circle_outline</i>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n","import React from \"react\";\r\nimport {PaginationButton} from \"../../button/Button\"\r\nimport {TestItem} from \"./Test-item/TestItem\"\r\nimport demoTests from \"../../../demoTests\"\r\nexport class TestListContainer extends React.Component {\r\n  createTestArray=(page = 1, resPerPage = 3)=>{\r\n    ///testArray chua thong tin nhu ngay tao, ten\r\n    let testArray=[]\r\n    let testArrayStorage=JSON.parse(localStorage.getItem(\"testArray\"))\r\n    const start = (page - 1) * resPerPage;\r\n    const end = page * resPerPage;\r\n    ////------------------real test----------------/////\r\n    // if(!testArrayStorage){\r\n\r\n    // } else {\r\n    \r\n    //   // testArrayStorage.slice(start, end).forEach(testNumber=>{\r\n    //   //   // const test=JSON.parse(localStorage.getItem(`testNo${testNumber}`))\r\n    //   //   // testArray.push(test)        \r\n    //   // })\r\n    // }\r\n\r\n\r\n    ////------------------demo test----------------/////\r\n    \r\n    demoTests.slice(start,end).forEach(test=>{\r\n      testArray.push(demoTests[test.testNumber-1])  \r\n    })\r\n    return testArray\r\n  }\r\n  renderButton=(page, numResults, resPerPage)=>{\r\n    const pages = Math.ceil(numResults / resPerPage);\r\n    if (page === 1 && pages > 1) {\r\n        // Only button to go to next page\r\n        return (\r\n          <div className=\"page-button-container\">\r\n            <PaginationButton\r\n              paginationButton={this.props.paginationButton}\r\n              page={page}\r\n              type=\"next\"\r\n            ></PaginationButton>\r\n          </div>\r\n        )\r\n    } else if (page < pages) {\r\n        // Both buttons\r\n        return (\r\n          <div className=\"page-button-container\">\r\n            <PaginationButton\r\n              paginationButton={this.props.paginationButton}\r\n              page={page}\r\n              type=\"prev\"\r\n            ></PaginationButton>\r\n            <PaginationButton\r\n              paginationButton={this.props.paginationButton}\r\n              page={page}\r\n              type=\"next\"\r\n            ></PaginationButton>\r\n          </div>\r\n        )\r\n    } else if (page === pages && pages > 1) {\r\n        // Only button to go to prev page\r\n        return (\r\n          <div className=\"page-button-container\">\r\n            <PaginationButton\r\n              paginationButton={this.props.paginationButton}\r\n              page={page}\r\n              type=\"prev\"\r\n            ></PaginationButton>\r\n          </div>\r\n        )\r\n    }\r\n  }\r\n  render() {\r\n    const button=this.renderButton(this.props.page,this.props.numResults,3)\r\n    const testArray= this.createTestArray(this.props.page,4)\r\n    const tests= testArray.map(test=>{\r\n\r\n      if(test.testNumber===this.props.testSelected){\r\n        return <TestItem\r\n                testSelected={true}\r\n                test={test}\r\n                key={test.testNumber}\r\n              ></TestItem>\r\n      }\r\n      else return <TestItem\r\n                    testSelected={false}\r\n                    test={test}\r\n                    key={test.testNumber}\r\n                    testClicked={this.props.testClicked}\r\n                  ></TestItem>\r\n    })\r\n    const yourTestListStyle={\r\n        display:\"flex\",\r\n        marginBottom: \"1rem\",\r\n        marginLeft: \"1rem\",\r\n        marginTop: \"2rem\"\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={yourTestListStyle}>\r\n          <i className=\"material-icons\">library_add</i>\r\n          <p style={{ marginLeft: \"1rem\" }}>Đề thi của bạn</p>\r\n        </div>\r\n        {tests}\r\n        <div className=\"page-button-container-container\">{button}</div>\r\n      </div>\r\n     \r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./Form.css\"\r\nimport {AddTestButton} from \"../button/Button\"\r\nexport class Form extends React.Component{\r\n    render() {\r\n      return (\r\n        <div className=\"form-container\">\r\n          <p className=\"form__create-text\">Tạo đề thi</p>\r\n          <form className=\"form\">\r\n            <input \r\n              type=\"text\" \r\n              value={this.props.testLink} \r\n              name=\"testLink\" \r\n              placeholder=\"Nhập link đề thi\" \r\n              onChange={this.props.handleChange}\r\n              className=\"input link-input\"\r\n            />\r\n            <input \r\n              value={this.props.testName}\r\n              name=\"testName\"\r\n              onChange={this.props.handleChange}\r\n              placeholder=\"Nhập tên đề thi\" \r\n              className=\"input\"\r\n            />\r\n            <AddTestButton addTestButton={this.props.addTestButton}></AddTestButton>\r\n          </form>\r\n        </div>\r\n      )\r\n    }\r\n  }","export default function shuffleArray(array) {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [array[i], array[j]] = [array[j], array[i]];\r\n    }\r\n  }","import React from \"react\";\r\nimport {TestContainer} from \"./qanda/Test-container\"\r\nimport {TestListContainer} from \"./testlist/TestListContainer\"\r\nimport {Form} from \"../form/Form\"\r\nimport json1 from \"../../qa/1.json\"\r\nimport json2 from \"../../qa/2.json\"\r\nimport json3 from \"../../qa/3.json\"\r\nimport json4 from \"../../qa/4.json\"\r\n\r\nimport shuffleArray from \"../../utils/shuffleArray\"\r\nimport alphabet from \"../../utils/alphabetArray\"\r\nexport class Container extends React.Component {\r\n    constructor() {\r\n      super()\r\n      this.state = {\r\n          testLink: \"\",\r\n          testName: \"\",\r\n          testCount:0,\r\n          page:1,\r\n          testSelected:1,\r\n          startDialog:true\r\n      }\r\n      this.handleChange = this.handleChange.bind(this)\r\n      this.onAddTestButtonClicked = this.onAddTestButtonClicked.bind(this)\r\n      this.onTestClicked=this.onTestClicked.bind(this)\r\n      this.onPaginationButtonClicked=this.onPaginationButtonClicked.bind(this)\r\n      this.onStartButtonClicked = this.onStartButtonClicked.bind(this);\r\n    }\r\n  \r\n    handleChange(event) {\r\n        const {name, value, type, checked} = event.target\r\n        type === \"checkbox\" ? this.setState({ [name]: checked }) : this.setState({ [name]: value })\r\n    }\r\n   \r\n    handleJson(json){\r\n      // turn json file into readable test\r\n      let test=[]\r\n      for(let i=0;i<json.length;i++){\r\n        test[i]={}\r\n        test[i].question=json[i].q \r\n        if(json[i].s){\r\n          test[i].img=json[i].s\r\n        }\r\n        let answers=[]\r\n        answers.push([json[i].a,1])\r\n        for(let ans=0;ans<json[i].n.length;ans++){\r\n          answers.push([json[i].n[ans],0])\r\n        }\r\n        // / random thu tu cau tra loi\r\n        shuffleArray(answers)\r\n        let returnArray=[]\r\n        let alphabetArray=alphabet()\r\n        for (let o=0;o<answers.length;o++){\r\n          returnArray[o]=[alphabetArray[o],...answers[o]]\r\n        }\r\n        test[i].answers=returnArray\r\n      }\r\n      shuffleArray(test)\r\n      return test\r\n    }\r\n    componentDidMount(){\r\n      if(!localStorage.getItem(\"testArray\") || !localStorage.getItem(\"testHistory\")){\r\n        localStorage.setItem(\"testArray\", JSON.stringify([]))\r\n        localStorage.setItem(\"testHistory\",0)\r\n      }\r\n      const testArray=JSON.parse(localStorage.getItem(\"testArray\"))\r\n      this.setState({testCount:testArray.length})\r\n    }\r\n    onPaginationButtonClicked(e){\r\n      const btn = e.target.closest('.page-button');\r\n      if (btn) {\r\n          const goToPage = parseInt(btn.dataset.goto, 10);\r\n          this.setState({page:goToPage})\r\n      }\r\n    }\r\n    onAddTestButtonClicked(){\r\n      const testArray=JSON.parse(localStorage.getItem(\"testArray\"))\r\n      const testHistory=parseInt(localStorage.getItem(\"testHistory\"))\r\n      const testNumber=testHistory+1\r\n      const link=this.state.testLink\r\n      const testName=this.state.testName\r\n      const date= new Date().toLocaleString().split(',')[1].substring(1)\r\n      const info={testNumber,link,testName,date}\r\n      testArray.unshift(testNumber)\r\n      localStorage.setItem(`testNo${testNumber}`, JSON.stringify(info));\r\n      localStorage.setItem(\"testHistory\", testNumber);\r\n      localStorage.setItem(\"testArray\",JSON.stringify(testArray))\r\n      this.setState(state=>{\r\n        return state.testCount+=1\r\n      })\r\n    }\r\n    // onTestClicked(e){\r\n    //   const eventClassName=e.target.className\r\n    //   const testNumber=parseInt(e.currentTarget.querySelector(\".test-number\").innerHTML)\r\n    //   let testArray=JSON.parse(localStorage.getItem(\"testArray\"))\r\n    //   ////remove test\r\n    //   if(eventClassName.includes(\"remove-icon\")){\r\n    //     this.setState(state=>state.testCount-1)\r\n    //     localStorage.removeItem(`testNo${testNumber}`)\r\n    //     testArray.splice(testArray.indexOf(testNumber), 1 );\r\n    //     localStorage.setItem(\"testArray\",JSON.stringify(testArray))\r\n    //   }\r\n    //   ////select test\r\n    //   this.setState({testSelected:testNumber,startDialog:true})\r\n    //   ////////cap nhat trang thai test dang select la test nao\r\n    //   ////////pass ten va ngay tao vao\r\n    // }\r\n\r\n    //-----------demo----------//////\r\n    onTestClicked(e){\r\n      const eventClassName=e.target.className\r\n      const testNumber=parseInt(e.currentTarget.querySelector(\".test-number\").innerHTML)\r\n      this.setState({testSelected:testNumber,startDialog:true,finishContainer:false})\r\n    }\r\n    onStartButtonClicked(){\r\n      this.setState({startDialog:false})\r\n    }\r\n    returnTest(){\r\n      if(this.state.testSelected===1){\r\n        return this.handleJson(json1)\r\n      }\r\n      if(this.state.testSelected===2){\r\n        return this.handleJson(json2)\r\n      }\r\n      if(this.state.testSelected===3){\r\n        return this.handleJson(json3)\r\n      }\r\n      if(this.state.testSelected===4){\r\n        return this.handleJson(json4)\r\n      }\r\n    }\r\n    render(){\r\n    const style={\r\n        display:\"grid\",\r\n        gridTemplateColumns: \"1fr 4fr\"\r\n    }\r\n    let TEST= this.returnTest()\r\n    \r\n      return(\r\n        <div style={style} className=\"quiz-container\">\r\n          <div>\r\n            \r\n            {/* <Form\r\n              testName={this.state.testName}\r\n              testLink={this.state.testLink}\r\n              handleChange={this.handleChange}\r\n              addTestButton={this.onAddTestButtonClicked}\r\n            ></Form> */}\r\n            <TestListContainer\r\n              page={this.state.page}\r\n              testSelected={this.state.testSelected}\r\n              numResults={this.state.testCount}\r\n              paginationButton={this.onPaginationButtonClicked}\r\n              testCount={this.state.testCount}\r\n              testClicked={this.onTestClicked}\r\n              \r\n            ></TestListContainer>\r\n          </div>\r\n          <TestContainer qAndA={TEST}\r\n                    testSelected={this.state.testSelected}\r\n                    startButton={this.onStartButtonClicked}\r\n                    startDialog={this.state.startDialog}\r\n                    finishContainer={this.state.finishContainer}\r\n          ></TestContainer>\r\n        </div>\r\n      )\r\n    }\r\n  }","export default function alphabet(){\r\n    let al=\"abcdefghijklmnopqrstuvwxyz\"\r\n    let alphabetArr=al.split(\"\")\r\n    let upAlphabetArr=alphabetArr.map(char=>char.toUpperCase())\r\n    return upAlphabetArr\r\n}","import React from \"react\";\nimport \"./App.css\";\nimport {Container} from \"../createMultipleChoicesTest/Container\"\n//--------------Cấp 1---------------//\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"container\">\n        {/* <div className=\"nav-bar\"></div> */}\n        <Container></Container>\n      </div>\n    );\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App / >, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}